pipeline {
    agent any

    parameters {
        string(
            name: "version_deploy",
            defaultValue: null,
            description: "Set version to Deploy API test-verse"
        )
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/develop']],
                    userRemoteConfigs: [[
                        url: 'git@github.com:LucasKoritar23/test-verse.git',
                        credentialsId: 'ssh-key-github'
                    ]]
                ])
            }
        }

        stage('Pull Image') {
            steps {
                sh "echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin"
                sh "docker pull $DOCKERHUB_USERNAME/test-verse:${params.version_deploy}"
            }
        }

        stage('Change Version file') {
            steps {
                script {
                    def dockerComposeFile = readFile('docker-compose.yml')
                    dockerComposeFile = dockerComposeFile.replace('test-verse:latest', "test-verse:${params.version_deploy}")
                    writeFile file: 'docker-compose.yml', text: dockerComposeFile
                }
            }
        }

        stage('Copy Files to EC2') {
            steps {
                // withCredentials([sshUserPrivateKey(credentialsId: 'test-verse-pem', keyFileVariable: 'KEYFILE')]) {
                //     sh "scp -i $KEYFILE /path/to/local/file ec2-user@${EC2_HOST}:/path/to/remote/directory"
                // }
                script {
                    sh 'pwd'
                }
            }
        }
    }


}