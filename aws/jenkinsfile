pipeline {
    agent any

    parameters {
        string(
            name: "version_deploy",
            defaultValue: null,
            description: "Set version to Deploy API test-verse"
        )
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/develop']],
                    userRemoteConfigs: [[
                        url: 'git@github.com:LucasKoritar23/test-verse.git',
                        credentialsId: 'ssh-key-github'
                    ]]
                ])
            }
        }

        stage('Pull Image') {
            steps {
                sh "echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin"
                sh "docker pull $DOCKERHUB_USERNAME/test-verse:${params.version_deploy}"
            }
        }

        stage('Change Version file') {
            steps {
                script {
                    def dockerComposeFile = readFile('docker-compose.yml')
                    dockerComposeFile = dockerComposeFile.replace('test-verse:latest', "test-verse:${params.version_deploy}")
                    writeFile file: 'docker-compose.yml', text: dockerComposeFile
                }
            }
        }

        // stage('Copy Files to EC2') {
        //     steps {
        //         withCredentials([sshUserPrivateKey(credentialsId: 'test-verse-pem', keyFileVariable: 'KEYFILE')]) {
        //             sh "scp -i $KEYFILE -r /var/jenkins_home/workspace/pipeline-test-verse-deploy ec2-user@${EC2_HOST}:/home/ec2-user/test-verse"
        //         }
        //     }
        // }

        // stage('Copy Files to EC2') {
        //     steps {
        //         withCredentials([sshUserPrivateKey(credentialsId: 'test-verse-pem', keyFileVariable: 'KEYFILE')]) {
        //             script {
        //                 sshagent(['test-verse-pem']) {
        //                     sh '''
        //                         #!/bin/bash
        //                         chmod 400 $KEYFILE
        //                         scp -i $KEYFILE -r /var/jenkins_home/workspace/pipeline-test-verse-deploy ec2-user@${EC2_HOST}:/home/ec2-user/test-verse
        //                     '''
        //                 }
        //             }
        //         }
        //     }
        // }

        stage('Copy Files to EC2') {
            steps {
                withCredentials([file(credentialsId: 'file-test-api-pem', variable: 'PEMFILE')]) {
                    sh "chmod 400 ${PEMFILE}"
                    sh "scp -i ${PEMFILE} -r /var/jenkins_home/workspace/pipeline-test-verse-deploy ec2-user@${EC2_HOST}:/home/ec2-user/test-verse"
                }
            }
        }
    }


}